[{"C:\\Users\\neelanshi sharma\\bb_website\\src\\pages\\Team.js":"1","C:\\Users\\neelanshi sharma\\bb_website\\src\\pages\\Join.js":"2","C:\\Users\\neelanshi sharma\\bb_website\\src\\components\\JoinUs\\Join_Card.js":"3","C:\\Users\\neelanshi sharma\\bb_website\\src\\components\\Team\\InfoModal.js":"4","C:\\Users\\neelanshi sharma\\bb_website\\src\\components\\NavigationBar.js":"5","C:\\Users\\neelanshi sharma\\bb_website\\src\\components\\Home\\OurFocus.js":"6","C:\\Users\\neelanshi sharma\\bb_website\\src\\pages\\Contact.js":"7","C:\\Users\\neelanshi sharma\\bb_website\\src\\App.js":"8","C:\\Users\\neelanshi sharma\\bb_website\\src\\components\\Team\\Card.js":"9","C:\\Users\\neelanshi sharma\\bb_website\\src\\pages\\Home.js":"10","C:\\Users\\neelanshi sharma\\bb_website\\src\\pages\\About.js":"11","C:\\Users\\neelanshi sharma\\bb_website\\src\\components\\Team\\Team_Section.js":"12"},{"size":7940,"mtime":1619794516389,"results":"13","hashOfConfig":"14"},{"size":2008,"mtime":1619794582828,"results":"15","hashOfConfig":"14"},{"size":3449,"mtime":1619684804949,"results":"16","hashOfConfig":"14"},{"size":2774,"mtime":1615307731178,"results":"17","hashOfConfig":"14"},{"size":5289,"mtime":1619627302699,"results":"18","hashOfConfig":"14"},{"size":3063,"mtime":1618670295047,"results":"19","hashOfConfig":"14"},{"size":4945,"mtime":1619963818877,"results":"20","hashOfConfig":"14"},{"size":1030,"mtime":1611842861323,"results":"21","hashOfConfig":"14"},{"size":3640,"mtime":1615300255714,"results":"22","hashOfConfig":"14"},{"size":7229,"mtime":1619794220021,"results":"23","hashOfConfig":"14"},{"size":829,"mtime":1619794245589,"results":"24","hashOfConfig":"14"},{"size":719,"mtime":1613381435175,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"1e3e0oh",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":12,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\neelanshi sharma\\bb_website\\src\\pages\\Team.js",["55","56","57","58","59"],"import { Grid } from '@material-ui/core';\r\nimport React from 'react'\r\nimport NavigationBar from '../components/NavigationBar.js';\r\nimport '../styles/Home.css';\r\nimport Footer from '../components/Footer.js';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Section_Head from '../components/Team/Section_Head.js';\r\nimport Team_Section from '../components/Team/Team_Section.js';\r\nimport PageHeaderShort from '../components/Page_Header_Short.js';\r\nimport MediaCard from '../components/Team/Card.js';\r\nimport data from '../Team_Data.json';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n    },\r\n    head1: {\r\n        background: '#fc9fb6',\r\n        color: 'rgb(255, 255, 255)',\r\n        marginBottom: '20px',\r\n        paddingTop: '40px',\r\n        paddingBottom: '40px',\r\n        paddingLeft: '10%',\r\n        paddingRight: '10%',\r\n        [theme.breakpoints.down('xs')]: {\r\n            paddingTop: '20px',\r\n            paddingBottom: '20px',\r\n        } \r\n    },\r\n    head2: {\r\n        background: 'rgb(173, 98, 117)',\r\n        color: 'rgb(255, 255, 255)',\r\n        marginBottom: '60px',\r\n        marginTop: '80px',\r\n        paddingTop: '40px',\r\n        paddingBottom: '40px',\r\n        paddingLeft: '10%',\r\n        paddingRight: '10%',\r\n        [theme.breakpoints.down('xs')]: {\r\n            paddingTop: '20px',\r\n            paddingBottom: '20px',\r\n        } \r\n    },\r\n    head3: {\r\n        background:  'rgb(181, 196, 255);',\r\n        color: 'rgb(255, 255, 255)',\r\n        marginBottom: '60px',\r\n        marginTop: '80px',\r\n        paddingTop: '30px',\r\n        paddingBottom: '30px',\r\n        paddingLeft: '10%',\r\n        paddingRight: '10%',\r\n        [theme.breakpoints.down('xs')]: {\r\n            paddingTop: '20px',\r\n            paddingBottom: '20px',\r\n        } \r\n    },\r\n}));\r\n\r\nfunction Team() {\r\n    const classes=useStyles();\r\n    document.title = 'Our Team | B.B.';\r\n    return (\r\n        <>\r\n        <NavigationBar/>\r\n        <PageHeaderShort/>\r\n        <Grid container direction=\"column\" className={classes.root}>\r\n        {data.pagesections?.map((e)=>{\r\n            if(e.title===\"Ambassadors\"){\r\n                return (\r\n                    <>\r\n                    <Grid item className={classes.head3} key={e}>\r\n                        <Team_Section title={e.title}/>\r\n                    </Grid>\r\n                    {e.sections?.map((t)=> {\r\n                        return(\r\n                        <Grid item container>\r\n                            <Grid item xs={1}/>\r\n                            <Grid container spacing={4} justify=\"center\" item xs={10} align=\"center\">\r\n                            {t.team?.map((g)=>{\r\n                                return(\r\n                                <Grid item xs={6} sm={4} md={3} key={g}>\r\n                                    <MediaCard \r\n                                        name={g.name}\r\n                                        designation={g.designation}\r\n                                        image={process.env.PUBLIC_URL + g.image}\r\n                                        clg={g.clg}\r\n                                        linkedin={g.linkedin}\r\n                                        description={g.description}/>\r\n                                </Grid>\r\n                                )\r\n                            })}\r\n                            </Grid>\r\n                            <Grid item xs={1}/>\r\n                        </Grid>\r\n                        )\r\n                    })};\r\n                    </>\r\n                )\r\n            }\r\n                            \r\n            else if(e.title===\"Executive Board\") {\r\n                return (\r\n                    <>\r\n                    <Grid item className={classes.head1} key={e}>\r\n                        <Team_Section title={e.title}/>\r\n                    </Grid>\r\n                    {e.sections?.map((t)=> {\r\n                        return(\r\n                        <>\r\n                        <Grid item key={t}>\r\n                            <Section_Head title={t.title}/>\r\n                        </Grid>\r\n                        <Grid item container>\r\n                            <Grid item xs={1} sm={1} md={2}/>\r\n                            <Grid container spacing={4} justify=\"center\" item xs={10} sm={10} md={8} align=\"center\">\r\n                            {t.team?.map((g)=>{\r\n                                if(t.title===\"Co-Founders/Co-Presidents\") {\r\n                                    return (\r\n                                        <Grid item xs={6} key={g}>\r\n                                            <MediaCard \r\n                                                name={g.name}\r\n                                                designation={g.designation}\r\n                                                image={process.env.PUBLIC_URL + g.image}\r\n                                                clg={g.clg}\r\n                                                linkedin={g.linkedin}\r\n                                                description={g.description}/>\r\n                                        </Grid>\r\n                                    );\r\n                                }\r\n\r\n                                else {\r\n                                    return (\r\n                                        <Grid item xs={6} sm={4} key={g}>\r\n                                            <MediaCard \r\n                                                name={g.name}\r\n                                                designation={g.designation}\r\n                                                image={process.env.PUBLIC_URL + g.image}\r\n                                                clg={g.clg}\r\n                                                linkedin={g.linkedin}\r\n                                                description={g.description}/>\r\n                                        </Grid>\r\n                                    );\r\n                                }\r\n                            })}\r\n                            </Grid>\r\n                            <Grid item xs={1} sm={1} md={2}/>\r\n                        </Grid>\r\n                        </>\r\n                        )\r\n                    })};\r\n                    </>\r\n                )\r\n            }\r\n\r\n            else if(e.title===\"Tech Team\") {\r\n                return (\r\n                    <>\r\n                    <Grid item className={classes.head2} key={e}>\r\n                        <Team_Section title={e.title}/>\r\n                    </Grid>\r\n                    {e.sections?.map((t)=> {\r\n                        return(\r\n                        <Grid item container>\r\n                            <Grid item xs={1} sm={1} md={2}/>\r\n                            <Grid container spacing={4} justify=\"center\" item xs={10} sm={10} md={8} align=\"center\">\r\n                            {t.team?.map((g)=>{\r\n                                return(\r\n                                <Grid item xs={6} sm={4} key={g}>\r\n                                    <MediaCard \r\n                                        name={g.name}\r\n                                        designation={g.designation}\r\n                                        image={process.env.PUBLIC_URL + g.image}\r\n                                        clg={g.clg}\r\n                                        linkedin={g.linkedin}\r\n                                        description={g.description}/>\r\n                                </Grid>\r\n                                )\r\n                            })}\r\n                            </Grid>\r\n                            <Grid item xs={1} sm={1} md={2}/>\r\n                        </Grid>\r\n                        )\r\n                    })}\r\n                    </>\r\n                )\r\n            }\r\n        })}\r\n        </Grid>\r\n        <Grid item>\r\n            <br/><br/><br/>\r\n        </Grid>\r\n        <Footer/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Team",["60","61"],"C:\\Users\\neelanshi sharma\\bb_website\\src\\pages\\Join.js",[],"C:\\Users\\neelanshi sharma\\bb_website\\src\\components\\JoinUs\\Join_Card.js",[],"C:\\Users\\neelanshi sharma\\bb_website\\src\\components\\Team\\InfoModal.js",["62"],"import React from 'react';\r\nimport { Card, CardContent, CardMedia, Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: 400,\r\n    width: 800,\r\n    overflowY: 'scroll',\r\n    [theme.breakpoints.down('sm')]:{\r\n        width: 600,\r\n        height: 300,\r\n    },\r\n    [theme.breakpoints.down('xs')]:{\r\n        width: 300,\r\n        height: 500,\r\n    }\r\n  },\r\n  image: {\r\n    height: 200,\r\n    width: 200,\r\n    borderRadius: 100,\r\n    marginTop: 30,\r\n    [theme.breakpoints.down('sm')]:{\r\n        width: 150,\r\n        height: 150,\r\n        borderRadius: 75,\r\n        marginTop: 20,\r\n    }\r\n  },\r\n  name: {\r\n    [theme.breakpoints.down('sm')]:{\r\n        fontSize: 20,\r\n    },\r\n    [theme.breakpoints.down('xs')]:{\r\n        fontSize: 18,\r\n    },\r\n  },\r\n  designation: {\r\n    [theme.breakpoints.down('sm')]:{\r\n        fontSize: 18,\r\n    },\r\n    [theme.breakpoints.down('xs')]:{\r\n        fontSize: 15,\r\n    },\r\n  },\r\n  linkedin: {\r\n    [theme.breakpoints.down('sm')]:{\r\n        fontSize: 25,\r\n    }\r\n  },\r\n  desc: {\r\n    fontSize: 18,\r\n    textAlign: 'justify',\r\n    paddingRight: 20,\r\n    paddingTop: 20,\r\n    paddingBottom: 20,\r\n    [theme.breakpoints.down('sm')]:{\r\n        fontSize: 15,\r\n        paddingRight: 10,\r\n        paddingTop: 10,\r\n        paddingBottom: 10,\r\n    },\r\n    [theme.breakpoints.down('xs')]:{\r\n        marginTop: -10,\r\n        paddingRight: 5,\r\n        paddingBottom: 5,\r\n    }\r\n  },\r\n}));\r\n\r\nexport default function InfoModal(props) {\r\n  const classes = useStyles();\r\n  const {name, designation, linkedin, image, clg, description}=props;\r\n  \r\n  return (\r\n    <Card raised='true'>\r\n        <Grid container direction=\"column\" className={classes.root}>\r\n            <Grid item container>\r\n            <Grid item xs={12} sm={4} align=\"center\">\r\n                <CardMedia image={image} className={classes.image}/>\r\n                <br/>\r\n                <Typography variant=\"h5\" className={classes.name}>\r\n                    {name}\r\n                </Typography>\r\n                <Typography variant=\"h6\" color=\"textSecondary\" className={classes.designation}>\r\n                    {designation}\r\n                </Typography>\r\n                <a href={linkedin}>\r\n                <LinkedInIcon fontSize=\"large\" color=\"primary\" className={classes.linkedin}/>\r\n                </a>\r\n            </Grid>\r\n            <Grid item xs={12} sm={8}>\r\n                <CardContent>\r\n                    <Typography variant=\"body2\" className={classes.desc}>\r\n                        {description}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    </Card>\r\n  );\r\n}","C:\\Users\\neelanshi sharma\\bb_website\\src\\components\\NavigationBar.js",["63","64","65","66","67","68"],"C:\\Users\\neelanshi sharma\\bb_website\\src\\components\\Home\\OurFocus.js",["69"],"import { Button, Grid, Typography, makeStyles, Paper } from '@material-ui/core';\r\nimport { PersonAdd } from '@material-ui/icons';\r\nimport React from 'react';\r\n\r\nconst focuses=[\r\n    {\r\n        title: \"Investment Banking\",\r\n        desc: \"Investment banking involves assisting companies with deal transactions and giving financial advice. Become a general memeber to get access to networking advice, technical/behavioural interview tips, and a community to get all your questions answered!\",\r\n    },\r\n    {\r\n        title: \"Consulting\",\r\n        desc: \"Management Consulting is the practice of providing advice to companies and tackling challenging obstacles. Become a general member to get access to market sizing tips, practice cases, sample frameworks, and a community to get all your questions answered!\",\r\n    },\r\n    {\r\n        title: \"Accounting\",\r\n        desc: \"Accounting is a career in which you will be checking companies financial statements and helping prevent fraud. Becoming a general member to get access to CPA practice, common behavioural questions, and a community to get all your questions answered!\",\r\n    },\r\n]\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100%',\r\n        paddingLeft: '10%',\r\n        paddingRight: '10%',\r\n    },\r\n    paper: {\r\n        height: '280px', \r\n        padding: '5%', \r\n        textAlign: 'center', \r\n        borderStyle: 'solid', \r\n        borderWidth: '1px', \r\n        borderColor: 'rgb(107, 30, 97)',\r\n        \"@media (max-width: 1200px)\": {\r\n            height: '350px',\r\n        },\r\n        [theme.breakpoints.only('sm')]: {\r\n            height: '280px',\r\n        },\r\n        \"@media (max-width: 769px)\": {\r\n            height: '370px',\r\n        },\r\n        [theme.breakpoints.only('xs')]: {\r\n            height: '250px',\r\n        },\r\n    },\r\n    icon: {\r\n        height: '40%',\r\n    },\r\n    head: {\r\n        fontWeight: 'bold', \r\n        color: 'rgb(107, 30, 97)',\r\n        [theme.breakpoints.up('md')]: {\r\n            fontSize: '25px',\r\n        },\r\n        [theme.breakpoints.only('md')]: {\r\n            fontSize: '20px',\r\n        }\r\n    },\r\n}));\r\n\r\nconst OurFocus = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n        <div>\r\n            <Grid container spacing={3} style={{marginTop: '5%', paddingBottom: '5%'}} justify='center'>\r\n                {focuses.map((e)=>{\r\n                    return (\r\n                        <Grid item xs={12} sm={6} md={4} align=\"center\">\r\n                            <Paper square elevation={2} className={classes.paper}>\r\n                                <PersonAdd color=\"primary\" align=\"center\" className={classes.icon}/>\r\n                                <Typography variant=\"h6\" className={classes.head}>{e.title}</Typography>\r\n                                <Typography variant=\"body2\">{e.desc}</Typography>\r\n                            </Paper>\r\n                        </Grid>\r\n                    );\r\n                })}\r\n            </Grid> \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OurFocus","C:\\Users\\neelanshi sharma\\bb_website\\src\\pages\\Contact.js",["70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87"],"import React, { useState } from 'react'\r\nimport NavigationBar from '../components/NavigationBar.js';\r\nimport '../styles/Home.css';\r\nimport Footer from '../components/Footer.js';\r\nimport PageHeaderShort from '../components/Page_Header_Short.js';\r\nimport TelegramIcon from '@material-ui/icons/Telegram';\r\nimport { Grid, TextField, Button, Typography, withStyles, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    head1: {\r\n        background: 'rgba(201, 155, 5, 0.8);',\r\n        color: 'white',\r\n        marginBottom: '20px',\r\n        paddingTop: '60px',\r\n        paddingBottom: '60px',\r\n        paddingLeft: '20%',\r\n        paddingRight: '20%',\r\n        [theme.breakpoints.down('sm')]: {\r\n            paddingTop: '40px',\r\n            paddingBottom: '40px',\r\n            paddingLeft: '10%',\r\n            paddingRight: '10%',\r\n        } \r\n    },\r\n}));\r\n\r\nfunction Contact(){\r\n  const classes = useStyles();\r\n  const firstName = useFormInput(\"\");\r\n  const lastName = useFormInput(\"\");\r\n  const message = useFormInput(\"\");\r\n  const email = useFormInput(\"\");\r\n  const emailError = useFormInput(false);\r\n  const sent = useFormInput(false);\r\n  const buttonText = useFormInput(\"Send Message\");\r\n\r\n  return (\r\n    <>\r\n    <NavigationBar/>\r\n    <PageHeaderShort/>\r\n    <Grid container direction=\"column\">\r\n      <Grid item className={classes.head1}>\r\n        <Typography variant=\"h4\" style={{fontSize: 40, fontWeight: 'bold'}}>Questions or Concerns?</Typography>\r\n        <Typography variant=\"body2\" style={{fontSize: 20, paddingTop: '10px', textAlign: 'justify'}}>\r\n          Email us at becomingbusinesswomen@gmail.com! Also feel free to send us any suggestions/resources you want us to share with the rest of the community.\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item container>\r\n        <Grid item xs={1} sm={2} md={3} />\r\n        <Grid item xs={10} sm={8} md={6} align=\"center\">\r\n          <Typography variant=\"h4\" style={{fontSize: 30, fontWeight: 'bold', marginTop: '20px', marginBottom: '20px'}}>\r\n            Get in touch with us!\r\n          </Typography>\r\n          <form className=\"contact-form\" onSubmit={formSubmit}>  \r\n              <TextField\r\n                id=\"outlined-basic\" placeholder=\"Enter your first name\"\r\n                label=\"First Name\"  variant=\"outlined\"\r\n                required            type=\"text\"\r\n                style={{width: '49%', marginRight: '1%'}}\r\n                {...firstName}/>\r\n\r\n              <TextField\r\n                id=\"outlined-basic\" placeholder=\"Enter your last name\"\r\n                label=\"Last Name\"   variant=\"outlined\"\r\n                {...lastName}\r\n                required            type=\"text\"\r\n                style={{width: '49%', marginLeft: '1%'}}/>\r\n                        \r\n              <br/>\r\n\r\n              <TextField\r\n                id=\"outlined-basic\" placeholder=\"Enter email address\"\r\n                label=\"Email\"       variant=\"outlined\"\r\n                {...email}\r\n                error={emailError}  required\r\n                type=\"email\"        fullWidth\r\n                style={{marginTop: '10px', marginBottom: '10px'}}/>\r\n                        \r\n              <br/>\r\n\r\n              <TextField\r\n                id=\"message\"    placeholder=\"Enter Message\"\r\n                label=\"Message\" variant=\"outlined\"\r\n                multiline       rowsMax={4}\r\n                {...message}\r\n                required        type=\"text\"\r\n                fullWidth/>\r\n\r\n              <br/>\r\n\r\n              <Button style={{color: 'white', background: 'black', padding: '10px', marginTop: '30px', marginBottom: '20%'}}>\r\n                <TelegramIcon style={{marginRight: '5px'}}/>{...buttonText}\r\n              </Button>\r\n            </form>\r\n          </Grid>\r\n          <Grid item xs={1} sm={2} md={3} />\r\n        </Grid>\r\n      </Grid>\r\n      <Footer/>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction handleEmailChange(e) {\r\n  if (!e.target.value.match(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)) {\r\n    useFormInput(e.target.email);\r\n    useFormInput(true);\r\n\r\n    if (email === \"\") {\r\n      // check if the input is empty\r\n      useFormInput(false);\r\n    }\r\n  } \r\n  else {\r\n    useFormInput(e.target.email);\r\n    useFormInput(false);\r\n  }\r\n};\r\n\r\nfunction useFormInput(initialValue) {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  function handleChange(e){\r\n    setValue(e.target.value);\r\n  }\r\n  \r\n  return {\r\n    value,\r\n    onChange: handleChange\r\n  };\r\n};\r\n\r\nasync function formSubmit(e) {\r\n  e.preventDefault();\r\n  setButtonText(\"...sending\");\r\n\r\n  let data = {\r\n    name: firstName + lastName,\r\n    email: email,\r\n    message: message,\r\n  };\r\n\r\n  try {\r\n    //await axios.post(\"BACKEND_URL\", data);\r\n    setSent(true);\r\n  } \r\n  catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default Contact","C:\\Users\\neelanshi sharma\\bb_website\\src\\App.js",[],"C:\\Users\\neelanshi sharma\\bb_website\\src\\components\\Team\\Card.js",[],"C:\\Users\\neelanshi sharma\\bb_website\\src\\pages\\Home.js",["88","89"],"C:\\Users\\neelanshi sharma\\bb_website\\src\\pages\\About.js",["90"],"C:\\Users\\neelanshi sharma\\bb_website\\src\\components\\Team\\Team_Section.js",[],{"ruleId":"91","severity":1,"message":"92","line":67,"column":36,"nodeType":"93","messageId":"94","endLine":67,"endColumn":38},{"ruleId":"95","severity":1,"message":"96","line":72,"column":25,"nodeType":"97","endLine":72,"endColumn":56},{"ruleId":"95","severity":1,"message":"96","line":105,"column":25,"nodeType":"97","endLine":105,"endColumn":56},{"ruleId":"95","severity":1,"message":"98","line":111,"column":29,"nodeType":"97","endLine":111,"endColumn":60},{"ruleId":"95","severity":1,"message":"96","line":159,"column":25,"nodeType":"97","endLine":159,"endColumn":56},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":74,"column":46,"nodeType":"105","messageId":"106","endLine":74,"endColumn":49},{"ruleId":"103","severity":1,"message":"107","line":7,"column":8,"nodeType":"105","messageId":"106","endLine":7,"endColumn":16},{"ruleId":"103","severity":1,"message":"108","line":8,"column":8,"nodeType":"105","messageId":"106","endLine":8,"endColumn":21},{"ruleId":"103","severity":1,"message":"109","line":9,"column":8,"nodeType":"105","messageId":"106","endLine":9,"endColumn":16},{"ruleId":"103","severity":1,"message":"110","line":11,"column":8,"nodeType":"105","messageId":"106","endLine":11,"endColumn":17},{"ruleId":"103","severity":1,"message":"111","line":19,"column":8,"nodeType":"105","messageId":"106","endLine":19,"endColumn":20},{"ruleId":"103","severity":1,"message":"112","line":21,"column":8,"nodeType":"105","messageId":"106","endLine":21,"endColumn":16},{"ruleId":"103","severity":1,"message":"113","line":1,"column":10,"nodeType":"105","messageId":"106","endLine":1,"endColumn":16},{"ruleId":"103","severity":1,"message":"114","line":7,"column":47,"nodeType":"105","messageId":"106","endLine":7,"endColumn":57},{"ruleId":"103","severity":1,"message":"115","line":34,"column":9,"nodeType":"105","messageId":"106","endLine":34,"endColumn":13},{"ruleId":"103","severity":1,"message":"116","line":104,"column":10,"nodeType":"105","messageId":"106","endLine":104,"endColumn":27},{"ruleId":"117","severity":1,"message":"118","line":105,"column":39,"nodeType":"119","messageId":"120","endLine":105,"endColumn":40,"suggestions":"121"},{"ruleId":"117","severity":1,"message":"118","line":105,"column":64,"nodeType":"119","messageId":"120","endLine":105,"endColumn":65,"suggestions":"122"},{"ruleId":"123","severity":2,"message":"124","line":106,"column":5,"nodeType":"105","endLine":106,"endColumn":17},{"ruleId":"123","severity":2,"message":"124","line":107,"column":5,"nodeType":"105","endLine":107,"endColumn":17},{"ruleId":"125","severity":2,"message":"126","line":109,"column":9,"nodeType":"105","messageId":"127","endLine":109,"endColumn":14},{"ruleId":"123","severity":2,"message":"124","line":111,"column":7,"nodeType":"105","endLine":111,"endColumn":19},{"ruleId":"123","severity":2,"message":"124","line":115,"column":5,"nodeType":"105","endLine":115,"endColumn":17},{"ruleId":"123","severity":2,"message":"124","line":116,"column":5,"nodeType":"105","endLine":116,"endColumn":17},{"ruleId":"125","severity":2,"message":"128","line":135,"column":3,"nodeType":"105","messageId":"127","endLine":135,"endColumn":16},{"ruleId":"103","severity":1,"message":"129","line":137,"column":7,"nodeType":"105","messageId":"106","endLine":137,"endColumn":11},{"ruleId":"125","severity":2,"message":"130","line":138,"column":11,"nodeType":"105","messageId":"127","endLine":138,"endColumn":20},{"ruleId":"125","severity":2,"message":"131","line":138,"column":23,"nodeType":"105","messageId":"127","endLine":138,"endColumn":31},{"ruleId":"125","severity":2,"message":"126","line":139,"column":12,"nodeType":"105","messageId":"127","endLine":139,"endColumn":17},{"ruleId":"125","severity":2,"message":"132","line":140,"column":14,"nodeType":"105","messageId":"127","endLine":140,"endColumn":21},{"ruleId":"125","severity":2,"message":"133","line":145,"column":5,"nodeType":"105","messageId":"127","endLine":145,"endColumn":12},{"ruleId":"134","severity":1,"message":"135","line":120,"column":13,"nodeType":"97","endLine":120,"endColumn":84},{"ruleId":"134","severity":1,"message":"135","line":173,"column":21,"nodeType":"97","endLine":173,"endColumn":52},{"ruleId":"103","severity":1,"message":"136","line":6,"column":10,"nodeType":"105","messageId":"106","endLine":6,"endColumn":20},"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react/jsx-pascal-case","Imported JSX component Team_Section must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component Section_Head must be in PascalCase or SCREAMING_SNAKE_CASE","no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'clg' is assigned a value but never used.","Identifier","unusedVar","'HomeIcon' is defined but never used.","'PersonAddIcon' is defined but never used.","'InfoIcon' is defined but never used.","'GroupIcon' is defined but never used.","'ListItemIcon' is defined but never used.","'MailIcon' is defined but never used.","'Button' is defined but never used.","'withStyles' is defined but never used.","'sent' is assigned a value but never used.","'handleEmailChange' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["139","140"],["141","142"],"react-hooks/rules-of-hooks","React Hook \"useFormInput\" is called in function \"handleEmailChange\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","no-undef","'email' is not defined.","undef","'setButtonText' is not defined.","'data' is assigned a value but never used.","'firstName' is not defined.","'lastName' is not defined.","'message' is not defined.","'setSent' is not defined.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'makeStyles' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"143","fix":"144","desc":"145"},{"messageId":"146","fix":"147","desc":"148"},{"messageId":"143","fix":"149","desc":"145"},{"messageId":"146","fix":"150","desc":"148"},"removeEscape",{"range":"151","text":"152"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"153","text":"154"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"155","text":"152"},{"range":"156","text":"154"},[3975,3976],"",[3975,3975],"\\",[4000,4001],[4000,4000]]